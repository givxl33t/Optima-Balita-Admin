[{"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\index.tsx":"1","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\reportWebVitals.ts":"2","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\rootStore\\configure-store.ts":"3","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\app\\App.tsx":"4","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\rootStore\\root-saga.ts":"5","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\rootStore\\root-reducer.ts":"6","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\theme\\create-theme.ts":"7","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\commons\\http-istance.common.ts":"8","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\commons\\check-authentication.common.ts":"9","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\authentication\\store\\sagas.store.ts":"10","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\authentication\\store\\constants.store.ts":"11","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\authentication\\store\\reducers.store.ts":"12","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\theme\\typography.ts":"13","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\users\\store\\user-constants.store.ts":"14","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\users\\store\\user-sagas.store.ts":"15","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\users\\store\\user-reducer.store.ts":"16","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\article\\store\\article-constants.store.ts":"17","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\article\\store\\article-sagas.store.ts":"18","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\category\\store\\category-sagas.store.ts":"19","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\category\\store\\category-constants.store.ts":"20","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\article\\store\\article-reducers.store.ts":"21","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\category\\store\\category-reducers.store.ts":"22","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\admin\\index.tsx":"23","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\authentication\\pages\\index.tsx":"24","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\authentication\\store\\actions.store.ts":"25","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\category\\store\\category-actions.store.ts":"26","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\category\\store\\category-api-service.store.ts":"27","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\article\\store\\article-actions.store.ts":"28","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\article\\store\\article-api-service.store.ts":"29","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\users\\store\\user-actions.store.ts":"30","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\users\\store\\user-api-service.store.ts":"31","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\authentication\\store\\api-service.store.ts":"32","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\components\\SideBar\\SideBar.tsx":"33","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\authentication\\pages\\register\\index.ts":"34","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\authentication\\pages\\login\\index.ts":"35","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\dashboard\\index.ts":"36","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\users\\pages\\index.ts":"37","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\article\\pages\\index.ts":"38","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\users\\selector\\index.ts":"39","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\dashboard\\dashboard.tsx":"40","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\users\\pages\\users.tsx":"41","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\article\\pages\\articles.tsx":"42","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\article\\selector\\index.ts":"43","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\authentication\\selector\\index.ts":"44","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\category\\selector\\index.ts":"45","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\users\\pages\\userForm.tsx":"46","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\components\\ComponentIndicator\\ComponentIndicator.tsx":"47","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\article\\pages\\articlesForm.tsx":"48","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\components\\Popup\\Popup.jsx":"49","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\components\\CustomHook\\index.ts":"50","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\components\\Controllers\\index.ts":"51","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\components\\CustomHook\\useForm.tsx":"52","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\components\\CustomHook\\useTable.tsx":"53","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\components\\Controllers\\ActionButton\\ActionButton.tsx":"54","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\authentication\\pages\\login\\login.tsx":"55","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\components\\Controllers\\Checkbox\\Checkbox.tsx":"56","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\components\\Controllers\\InputText\\Input.tsx":"57","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\authentication\\pages\\register\\register.tsx":"58","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\components\\Controllers\\InputFile\\index.tsx":"59","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\components\\Controllers\\Select\\index.tsx":"60","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\category\\pages\\index.ts":"61","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\category\\pages\\categories.tsx":"62","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\category\\pages\\categoriesForm.tsx":"63"},{"size":853,"mtime":1702897750397,"results":"64","hashOfConfig":"65"},{"size":440,"mtime":1702897750397,"results":"66","hashOfConfig":"65"},{"size":868,"mtime":1702897750382,"results":"67","hashOfConfig":"65"},{"size":1777,"mtime":1702926232701,"results":"68","hashOfConfig":"65"},{"size":1638,"mtime":1702917893144,"results":"69","hashOfConfig":"65"},{"size":689,"mtime":1702897750382,"results":"70","hashOfConfig":"65"},{"size":650,"mtime":1702897750397,"results":"71","hashOfConfig":"65"},{"size":447,"mtime":1702914070043,"results":"72","hashOfConfig":"65"},{"size":610,"mtime":1702914603340,"results":"73","hashOfConfig":"65"},{"size":1210,"mtime":1702962224603,"results":"74","hashOfConfig":"65"},{"size":310,"mtime":1702897750381,"results":"75","hashOfConfig":"65"},{"size":1121,"mtime":1702897750382,"results":"76","hashOfConfig":"65"},{"size":636,"mtime":1702897750397,"results":"77","hashOfConfig":"65"},{"size":444,"mtime":1702897750397,"results":"78","hashOfConfig":"65"},{"size":1413,"mtime":1702897750397,"results":"79","hashOfConfig":"65"},{"size":1720,"mtime":1702897750397,"results":"80","hashOfConfig":"65"},{"size":472,"mtime":1702897750365,"results":"81","hashOfConfig":"65"},{"size":1783,"mtime":1702965075121,"results":"82","hashOfConfig":"65"},{"size":1246,"mtime":1702897750382,"results":"83","hashOfConfig":"65"},{"size":379,"mtime":1702897750382,"results":"84","hashOfConfig":"65"},{"size":1830,"mtime":1702937210575,"results":"85","hashOfConfig":"65"},{"size":1517,"mtime":1702897750382,"results":"86","hashOfConfig":"65"},{"size":1424,"mtime":1702897750365,"results":"87","hashOfConfig":"65"},{"size":374,"mtime":1702897750365,"results":"88","hashOfConfig":"65"},{"size":588,"mtime":1702897750365,"results":"89","hashOfConfig":"65"},{"size":712,"mtime":1702897750382,"results":"90","hashOfConfig":"65"},{"size":473,"mtime":1702897750382,"results":"91","hashOfConfig":"65"},{"size":854,"mtime":1702897750365,"results":"92","hashOfConfig":"65"},{"size":1499,"mtime":1702963515623,"results":"93","hashOfConfig":"65"},{"size":807,"mtime":1702897750397,"results":"94","hashOfConfig":"65"},{"size":546,"mtime":1702897750397,"results":"95","hashOfConfig":"65"},{"size":731,"mtime":1702929626702,"results":"96","hashOfConfig":"65"},{"size":4326,"mtime":1702937621427,"results":"97","hashOfConfig":"65"},{"size":603,"mtime":1702897750365,"results":"98","hashOfConfig":"65"},{"size":632,"mtime":1702963919759,"results":"99","hashOfConfig":"65"},{"size":886,"mtime":1702897750382,"results":"100","hashOfConfig":"65"},{"size":595,"mtime":1702897750382,"results":"101","hashOfConfig":"65"},{"size":779,"mtime":1702964046796,"results":"102","hashOfConfig":"65"},{"size":547,"mtime":1702897750382,"results":"103","hashOfConfig":"65"},{"size":5578,"mtime":1702938585599,"results":"104","hashOfConfig":"65"},{"size":4609,"mtime":1702897750382,"results":"105","hashOfConfig":"65"},{"size":5341,"mtime":1702963695089,"results":"106","hashOfConfig":"65"},{"size":397,"mtime":1702963862030,"results":"107","hashOfConfig":"65"},{"size":284,"mtime":1702897750365,"results":"108","hashOfConfig":"65"},{"size":429,"mtime":1702897750382,"results":"109","hashOfConfig":"65"},{"size":2527,"mtime":1702897750382,"results":"110","hashOfConfig":"65"},{"size":1465,"mtime":1702897750349,"results":"111","hashOfConfig":"65"},{"size":3921,"mtime":1702964807990,"results":"112","hashOfConfig":"65"},{"size":1539,"mtime":1702897750365,"results":"113","hashOfConfig":"65"},{"size":62,"mtime":1702897750349,"results":"114","hashOfConfig":"65"},{"size":318,"mtime":1702897750349,"results":"115","hashOfConfig":"65"},{"size":1027,"mtime":1702897750349,"results":"116","hashOfConfig":"65"},{"size":4044,"mtime":1702897750349,"results":"117","hashOfConfig":"65"},{"size":991,"mtime":1702897750349,"results":"118","hashOfConfig":"65"},{"size":5047,"mtime":1702961568863,"results":"119","hashOfConfig":"65"},{"size":831,"mtime":1702897750349,"results":"120","hashOfConfig":"65"},{"size":650,"mtime":1702897750349,"results":"121","hashOfConfig":"65"},{"size":5566,"mtime":1702897750365,"results":"122","hashOfConfig":"65"},{"size":1068,"mtime":1702936074876,"results":"123","hashOfConfig":"65"},{"size":1037,"mtime":1702897750349,"results":"124","hashOfConfig":"65"},{"size":700,"mtime":1702897750382,"results":"125","hashOfConfig":"65"},{"size":4382,"mtime":1702897750382,"results":"126","hashOfConfig":"65"},{"size":1956,"mtime":1702897750382,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"sczj5c",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"130"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"130"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"130"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"130"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"130"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"130"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"130"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"130"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"130"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"130"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"267"},"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\index.tsx",[],["268","269"],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\reportWebVitals.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\rootStore\\configure-store.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\app\\App.tsx",["270"],"import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\r\nimport { ThemeProvider } from '@material-ui/core'\r\n\r\nimport { Authentication } from '../feature/authentication/pages'\r\nimport { createMuiTheme } from '../theme/create-theme'\r\nimport { Dashbaord } from '../feature/admin'\r\nimport http from '../commons/http-istance.common'\r\nimport { checkAdminAuth } from '../commons/check-authentication.common'\r\n\r\nconst refreshToken = async () => {\r\n  try {\r\n    const refresh = await http.put('https://www.givxl33t.site/api/auth/refresh', {\r\n      refreshToken: localStorage.getItem('refreshToken')\r\n    })\r\n\r\n    localStorage.setItem('accessToken', refresh.data.accessToken)\r\n    localStorage.setItem('refreshToken', refresh.data.refreshToken)\r\n\r\n    console.log('refresh token herreeee');\r\n  } catch (error) {\r\n    console.log(error.message)\r\n  }\r\n}\r\n\r\n\r\nexport const PrivateAdminRoute = ({component, ...rest}: any) => {\r\n  const routeComponent = (props) => {\r\n    const checkAuth = checkAdminAuth()\r\n\r\n    if (checkAuth != false) {\r\n      refreshToken(checkAuth)\r\n\r\n      return (\r\n        React.createElement(component, props)\r\n      )\r\n    } else {\r\n      return (\r\n        <Redirect to={{pathname: '/authentication/login'}} />\r\n      )\r\n    }\r\n  }\r\n\r\n  return <Route {...rest} render={routeComponent} />\r\n\r\n}\r\n\r\nfunction App() {\r\n  const theme = createMuiTheme({})\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/authentication\" component={Authentication} />\r\n          <PrivateAdminRoute path=\"/admin\" component={Dashbaord} />\r\n          <Redirect to=\"/admin/dashboard\" />\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\rootStore\\root-saga.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\rootStore\\root-reducer.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\theme\\create-theme.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\commons\\http-istance.common.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\commons\\check-authentication.common.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\authentication\\store\\sagas.store.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\authentication\\store\\constants.store.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\authentication\\store\\reducers.store.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\theme\\typography.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\users\\store\\user-constants.store.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\users\\store\\user-sagas.store.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\users\\store\\user-reducer.store.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\article\\store\\article-constants.store.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\article\\store\\article-sagas.store.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\category\\store\\category-sagas.store.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\category\\store\\category-constants.store.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\article\\store\\article-reducers.store.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\category\\store\\category-reducers.store.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\admin\\index.tsx",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\authentication\\pages\\index.tsx",["271"],"import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport Login from './login'\r\nimport Register from './register'\r\n\r\nexport function Authentication() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/authentication/login\" component={Login} />\r\n      <Route path=\"/authentication/register\" component={Register} />\r\n    </Switch>\r\n  )\r\n}\r\n","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\authentication\\store\\actions.store.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\category\\store\\category-actions.store.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\category\\store\\category-api-service.store.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\article\\store\\article-actions.store.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\article\\store\\article-api-service.store.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\users\\store\\user-actions.store.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\users\\store\\user-api-service.store.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\authentication\\store\\api-service.store.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\components\\SideBar\\SideBar.tsx",["272"],"import React,{ useEffect, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport http from '../../commons/http-istance.common'\r\n\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon' \r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport AssessmentIcon from '@material-ui/icons/Assessment'\r\nimport CollectionsBookmarkIcon from '@material-ui/icons/CollectionsBookmark'\r\nimport DynamicFeedIcon from '@material-ui/icons/DynamicFeed'\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\r\n\r\nimport { checkAdminAuth } from '../../commons/check-authentication.common'\r\n\r\nconst drawerWidth = 250\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      width: drawerWidth,\r\n      position: \"fixed\",\r\n      left: 0,\r\n      top: 0,\r\n      height: \"100%\",\r\n      background: \"white\",\r\n      paddingTop: '50px',\r\n      boxShadow: \"rgba(99, 99, 99, 0.2) 0px 2px 8px 0px\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\"\r\n    },\r\n    main: {\r\n      width: \"100%\",\r\n      height: '100%',\r\n      position: 'relative'\r\n    },\r\n    link: {\r\n      textDecoration: \"none\",\r\n      color: \"black\",\r\n    },\r\n    list: {\r\n      '& .MuiList-root': {\r\n        margin: 0\r\n      }\r\n    },\r\n    logout: {\r\n      position: 'relative',\r\n    },\r\n    avatarContainer: {\r\n      position: 'relative',\r\n      width: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    avatar: {\r\n      width: '80px',\r\n      height: '80px'\r\n    },\r\n    listItems: {\r\n      paddingLeft: theme.spacing(2),\r\n      marginBottom: theme.spacing(2)\r\n    },\r\n    adminCard: {\r\n      textAlign: 'center',\r\n      marginBottom: theme.spacing(4),\r\n    }\r\n  })\r\n)\r\n\r\nconst routerItems = [\r\n  { title: \"Dashboard\", router: \"/admin/dashboard\", icon: <AssessmentIcon /> },\r\n  { title: \"Articles\", router: \"/admin/dashboard/articles\", icon: <CollectionsBookmarkIcon /> },\r\n  { title: \"Categories\", router: \"/admin/dashboard/categories\", icon: <DynamicFeedIcon /> },\r\n  { title: \"Users\", router: \"/admin/dashboard/users\", icon: <SupervisorAccountIcon /> }\r\n]\r\n\r\nexport default function Sidebar() {\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n\r\n  const [ userName, setUserName ] = useState(null)\r\n  \r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem('user') || '{}')\r\n\r\n    setUserName(user.username)\r\n  }, [])\r\n\r\n  const handleLogout = () => {\r\n    http.delete('https://www.givxl33t.site/api/auth/logout', {\r\n      data: {\r\n        refreshToken: localStorage.getItem('refreshToken')\r\n      }\r\n    })\r\n\r\n    console.log('logout here');\r\n\r\n    localStorage.removeItem('accessToken')\r\n    localStorage.removeItem('refreshToken')\r\n    localStorage.removeItem('user')\r\n    \r\n    history.replace('/authentication/login')\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.main}>\r\n\r\n        <div className={classes.adminCard}>\r\n          <Typography variant=\"h6\" component=\"h2\">Hello <b>{userName}!</b></Typography>\r\n        </div>\r\n\r\n        <div className={classes.listItems}>\r\n          {routerItems.map((router, i) => {\r\n            return (\r\n              <div key={i}>\r\n                <Link to={router.router} className={classes.link}>\r\n                  <List>\r\n                    <ListItem button key={router.title}>\r\n                      <ListItemIcon>\r\n                        {router.icon}\r\n                      </ListItemIcon>\r\n                      <ListItemText primary={router.title} />\r\n                    </ListItem>\r\n                  </List>\r\n                </Link>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n\r\n        <List className={classes.logout}>\r\n          <ListItem button onClick={handleLogout}>\r\n            <ListItemText primary=\"Logout\" />\r\n            <ListItemIcon>\r\n              <ExitToAppIcon />\r\n            </ListItemIcon>\r\n          </ListItem>\r\n        </List>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\authentication\\pages\\register\\index.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\authentication\\pages\\login\\index.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\dashboard\\index.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\users\\pages\\index.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\article\\pages\\index.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\users\\selector\\index.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\dashboard\\dashboard.tsx",["273","274"],"import React, { useState, useEffect } from 'react'\r\n\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport Card from '@material-ui/core/Card'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport { useTable } from '../../components/CustomHook'\r\nimport {ComponentIndicator} from '../../components/ComponentIndicator/ComponentIndicator'\r\n\r\nconst useStyles = makeStyles({\r\n  section: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  container: {\r\n    marginTop: 20,\r\n    marginBottom: 20\r\n  }\r\n})\r\n\r\nconst articlesHeadCells = [\r\n  { id: 'no', label: 'Title' },\r\n  { id: 'author', label: 'Author'}\r\n]\r\n\r\nconst categoriesHeadCells = [\r\n  { id: 'name', label: 'Category Name' }\r\n]\r\n\r\n\r\nexport const Dashboard = ({ users, usersData, usersLength, categories, articles, getUsers, getArticle, getCategories, getUsersData }) => {\r\n  const classes = useStyles()\r\n\r\n  const [filterFn, setFilterFn] = useState({fn: items => {return items; }})\r\n\r\n  const {\r\n    TblContainer,\r\n    TblHead,\r\n    TblPagination,\r\n    recordsAfterPagingAndSorting\r\n  } = useTable(articles, articlesHeadCells, filterFn)\r\n\r\n  const {\r\n    TblHead: CategoryHead,\r\n    TblContainer: CategoryContainer,\r\n    TblPagination: CategoryPagination,\r\n    recordsAfterPagingAndSorting: categoryrecordsAfterPagingAndSorting\r\n  } = useTable(categories, categoriesHeadCells, filterFn)\r\n\r\n  useEffect(() => {\r\n    getArticle()\r\n    getCategories()\r\n    getUsersData()\r\n  }, [])\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item md={12} xs={12}>\r\n        <Card className={classes.section}>\r\n          <List>\r\n            <ListItem>\r\n                <Typography component=\"h1\" variant=\"h2\">\r\n                  Dashboard\r\n                </Typography>\r\n              </ListItem>\r\n            <ListItem className={classes.container}>\r\n              <Grid container spacing={5}>\r\n                <Grid item md={4}>\r\n                  <ComponentIndicator\r\n                    title=\"Users\"\r\n                    length={usersLength && usersLength}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={4}>\r\n                  <ComponentIndicator\r\n                    title=\"Articles\"\r\n                    length={articles && articles.length}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={4}>\r\n                  <ComponentIndicator\r\n                    title=\"Categories\"\r\n                    length={categories && categories.length}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </ListItem>\r\n            <ListItem>\r\n                <Typography component=\"h1\" variant=\"h2\">\r\n                  Users Chart\r\n                </Typography>\r\n              </ListItem>\r\n            <ListItem className={classes.container}>\r\n              {usersData && <Line\r\n                      data={{\r\n                        labels: usersData.map((x) => x._id),\r\n                        datasets: [\r\n                          {\r\n                            label: 'Users',\r\n                            backgroundColor: 'rgba(162, 222, 208, 1)',\r\n                            data: usersData.map((x) => x.count)\r\n                          }\r\n                        ]\r\n                      }}\r\n                      options={{\r\n                        legend: { display: true, position: 'right' },\r\n                      }}\r\n                    >\r\n                    </Line>}\r\n            </ListItem>\r\n          </List>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item md={12}>\r\n        <Card className={classes.section}>\r\n          <List>\r\n            <ListItem>\r\n              <Grid container spacing={4}>\r\n                <Grid item md={9}>\r\n                  <Typography variant=\"h4\" content=\"h1\">\r\n                    Articles\r\n                  </Typography>\r\n                  <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                      {articles && recordsAfterPagingAndSorting().map((article) => (\r\n                        <TableRow key={article._id}>\r\n                          <TableCell>{article.title}</TableCell>\r\n                          <TableCell>{article.author}</TableCell>\r\n                        </TableRow>))\r\n                      }\r\n                    </TableBody>\r\n                  </TblContainer>\r\n                  {articles && <TblPagination />}\r\n                </Grid>\r\n\r\n                <Grid item md={3}>\r\n                  <Typography variant=\"h4\" content=\"h1\">\r\n                    Categories\r\n                  </Typography>\r\n                  <CategoryContainer>\r\n                    <CategoryHead />\r\n                    <TableBody>\r\n                      {categories && categoryrecordsAfterPagingAndSorting().map((category) => (\r\n                        <TableRow key={category._id}>\r\n                          <TableCell>{category.name}</TableCell>\r\n                        </TableRow>))\r\n                      }\r\n                    </TableBody>\r\n                  </CategoryContainer>\r\n                  {categories && <CategoryPagination />}\r\n                </Grid>\r\n              </Grid>\r\n            </ListItem>\r\n          </List>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\users\\pages\\users.tsx",["275"],"import React, { useState, useEffect } from 'react'\r\n\r\nimport { useTable } from '../../../components/CustomHook'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\n\r\nimport { Controllers } from '../../../components/Controllers'\r\n\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined'\r\n\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\r\n\r\nimport Popup from '../../../components/Popup/Popup'\r\nimport UserForm from './userForm'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    pageContent: {\r\n      padding: theme.spacing(4),\r\n      '& .MuiToolbar-root': {\r\n        padding: 0\r\n      }\r\n    },\r\n    searchInput: {\r\n      width: '75%'\r\n    },\r\n    newButton: {\r\n      position: \"absolute\",\r\n      right: \"10px\"\r\n    },\r\n  })\r\n)\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'No.' },\r\n  { id: 'username', label: 'User Name' },\r\n  { id: 'email', label: 'Email' },\r\n  { id: 'permissionFlag', label: 'Permission Flag' },\r\n  { id: \"actions\", label: \"Actions\", disableSorting: true }\r\n]\r\n\r\nexport interface Props {\r\n  getUsers: () => void\r\n  users: any\r\n  editUser: () => void\r\n  deleteUser: () => void\r\n}\r\n\r\nexport function Users({ getUsers, users, editUser, deleteUser }: Props) {\r\n  const classes = useStyles()\r\n\r\n  const [recordForEdit, setRecordForEdit] = useState(null)\r\n  const [openPopup, setOpenPopup] = useState(false)\r\n  const [filterFn, setFilterFn] = useState({fn: items => {return items; }})\r\n\r\n  const {\r\n    TblContainer,\r\n    TblHead,\r\n    TblPagination,\r\n    recordsAfterPagingAndSorting\r\n  } = useTable(users, headCells, filterFn)\r\n\r\n  useEffect(() => {\r\n    getUsers()\r\n  }, [])\r\n\r\n  const handleSearch = (e: React.ChangeEvent) => {\r\n    let target = e.target\r\n    setFilterFn({\r\n      fn: items => {\r\n        if (target.value === '')\r\n          return items\r\n        else \r\n          return items.filter(x => x.email.toLowerCase().includes(target.value))\r\n      }\r\n    })\r\n  }\r\n\r\n  const openInPopup = (item: any) => {\r\n    setRecordForEdit(item)\r\n    setOpenPopup(true)\r\n  }\r\n\r\n  const editSubmit = (user: any, resetForm: any) => {\r\n    editUser(user)\r\n    resetForm()\r\n    setRecordForEdit(null)\r\n    setOpenPopup(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n        <Toolbar>\r\n          <TextField\r\n            className={classes.searchInput}\r\n            label=\"Search User\"\r\n            InputProps= {{\r\n                startAdornment:(<InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>)\r\n              }}\r\n            variant=\"outlined\"\r\n            onChange={handleSearch}\r\n          />\r\n        </Toolbar>\r\n        <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n            {\r\n              users && recordsAfterPagingAndSorting().map((item: any, index: number) => (\r\n                <TableRow key={item._id}>\r\n                  <TableCell>{index + 1}</TableCell>\r\n                  <TableCell>{item.firstName}</TableCell>\r\n                  <TableCell>{item.email}</TableCell>\r\n                  <TableCell>{item.permissionFlags}</TableCell>\r\n                  <TableCell>\r\n                      <Controllers.ActionButton\r\n                        color=\"primary\"\r\n                        onClick={() => {openInPopup(item)}}\r\n                      >\r\n                        <EditOutlinedIcon fontSize=\"small\" />\r\n                      </Controllers.ActionButton>\r\n                      <Controllers.ActionButton\r\n                        color=\"secondary\"\r\n                        onClick={() => {deleteUser(item._id)}}\r\n                      >\r\n                        <CloseIcon fontSize=\"small\" />\r\n                      </Controllers.ActionButton>\r\n                    </TableCell>\r\n                </TableRow>\r\n              ))\r\n            }\r\n          </TableBody>\r\n        </TblContainer>\r\n        {users && <TblPagination /> }\r\n      </Paper>\r\n      <Popup\r\n        title=\"Users Form\"\r\n        openPopup={openPopup}\r\n        setOpenPopup={setOpenPopup}\r\n      >\r\n        <UserForm\r\n          recordForEdit={recordForEdit}\r\n          editSubmit={editSubmit}\r\n        />\r\n      </Popup>\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\article\\pages\\articles.tsx",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\article\\selector\\index.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\authentication\\selector\\index.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\category\\selector\\index.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\users\\pages\\userForm.tsx",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\components\\ComponentIndicator\\ComponentIndicator.tsx",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\article\\pages\\articlesForm.tsx",["276","277","278","279","280","281"],"import React, { useEffect } from 'react'\r\nimport MarkdownIt from 'markdown-it'\r\nimport MdEditor from 'react-markdown-editor-lite'\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\nimport Chip from '@material-ui/core/Chip'\r\n\r\nimport Input from '@material-ui/core/Input'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\n\r\nimport { Form, useForm as useFormHook } from '../../../components/CustomHook/useForm'\r\nimport { Controllers } from '../../../components/Controllers'\r\n\r\nconst initialOfValues = {\r\n  title: '',\r\n  description: '',\r\n  content: '',\r\n  image: undefined\r\n}\r\n\r\ninterface Props {\r\n  sendData: (data: FormValues) => void\r\n  categoriesData: any\r\n  addOrEdit: any\r\n  recordForEdit: any\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n  createStyles({\r\n    chips: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap'\r\n    },\r\n    chip: {\r\n      margin: 2\r\n    },\r\n    noLabel: {\r\n      marginTop: theme.spacing(3)\r\n    },\r\n    button: {\r\n      marginTop: theme.spacing(4)\r\n    }\r\n  })\r\n)\r\n\r\nexport default function ArticlesForm({categoriesData, sendData, addOrEdit, recordForEdit}: Props) {\r\n  const classes = useStyles()\r\n  const mdParser = new MarkdownIt()\r\n\r\n  const {\r\n    values,\r\n    setValues,\r\n    resetForm,\r\n    handleInputChange\r\n  } = useFormHook(initialOfValues)\r\n\r\n  const handleEditorChange = (value) => ({\r\n    target: {\r\n      value,\r\n      name: 'content'\r\n    }\r\n  })\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault()\r\n    addOrEdit(values, resetForm);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (recordForEdit != null) {\r\n      setValues({\r\n        ...recordForEdit\r\n      })\r\n    }\r\n  }, [recordForEdit, setValues])\r\n\r\n  return (\r\n    <Form onSubmit={onSubmit}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={6}>\r\n          <Controllers.Input\r\n            name=\"title\"\r\n            label=\"Title\"\r\n            fullWidth\r\n            value={values.title}\r\n            onChange={handleInputChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Controllers.Input\r\n            name=\"description\"\r\n            label=\"Description\"\r\n            fullWidth\r\n            multiline\r\n            rows={4}\r\n            value={values.description}\r\n            variant=\"outlined\"\r\n            onChange={handleInputChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {/* <Controllers.MdEditor\r\n            name=\"content\"\r\n            value={values.content}\r\n            onChange={handleInputChange}\r\n          /> */}\r\n          <MdEditor\r\n            style={{\r\n              height: '500px'\r\n            }}\r\n            value={values.content}\r\n            renderHTML={text => mdParser.render(text)}\r\n            onChange={({ text }) => handleInputChange(handleEditorChange(text))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Controllers.InputFile \r\n            id=\"raised-button-file\"\r\n            accept=\"image/*\"\r\n            name=\"image\"\r\n            onChange={handleInputChange}\r\n          />\r\n          <label htmlFor=\"raised-button-file\">\r\n            <Button variant=\"contained\" component=\"span\">\r\n              Upload Image\r\n            </Button>\r\n          </label>\r\n          <br />\r\n          <br />\r\n          {values.image && values.image.name}\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            className={classes.button}\r\n          >\r\n            Post\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={9}></Grid>\r\n      </Grid>\r\n    </Form>\r\n  )\r\n}\r\n","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\components\\Popup\\Popup.jsx",[],["282","283"],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\components\\CustomHook\\index.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\components\\Controllers\\index.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\components\\CustomHook\\useForm.tsx",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\components\\CustomHook\\useTable.tsx",["284"],"import React, { useState } from 'react'\r\n\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\r\n\r\nimport Table from '@material-ui/core/Table'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    table: {\r\n      marginTop: theme.spacing(3),\r\n      '& thead th': {\r\n        fontWeight: '600',\r\n        backgroundColor: theme.palette.primary.main\r\n      },\r\n      '& tbody td': {\r\n        fontWeight: '300',\r\n      },\r\n      '& tbody tr:hover': {\r\n        backgroundColor: '#fffbf2',\r\n        cursor: 'pointer',\r\n      }\r\n    }\r\n  })\r\n)\r\n\r\ninterface HeadCell {\r\n  id: string\r\n  label: string\r\n  disableSorting?: boolean\r\n}\r\n\r\nexport default function useTable(records: any, headCells: HeadCell[], filterFn: any) {\r\n\r\n  const classes = useStyles()\r\n\r\n  const pages = [5, 10, 25]\r\n  const [page, setPage] = useState<number>(0)\r\n  const [rowsPerPage, setRowsPerPage] = useState<number>(pages[page])\r\n  const [order, setOrder] = useState<any>()\r\n  const [orderBy, setOrderBy] = useState<any>()\r\n  \r\n  interface TableProps {\r\n    children: React.ReactNode\r\n  }\r\n\r\n  const TblContainer = (props: TableProps) => (\r\n    <Table className={classes.table}>\r\n      {props.children}\r\n    </Table>\r\n  )\r\n\r\n  const TblHead = (props: any) => {\r\n\r\n    const handleSortRequest = (cellId: string) => {\r\n      const isAsc = cellId === cellId && order === \"asc\"\r\n      setOrder(isAsc ? \"desc\" : \"asc\")\r\n      setOrderBy(cellId)\r\n    }\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          {\r\n            headCells.map((headCell: HeadCell) => ( \r\n              <TableCell key={headCell.id} sortDirection={orderBy === headCell.id ? order: false}>\r\n                {headCell.disableSorting ? headCell.label : \r\n                  <TableSortLabel\r\n                    active={orderBy === headCell.id}\r\n                    direction={orderBy === headCell.id ? order : \"asc\"}\r\n                    onClick={() => {handleSortRequest(headCell.id)}}\r\n                  >\r\n                    {headCell.label}\r\n                  </TableSortLabel>\r\n                }\r\n              </TableCell>\r\n            ))\r\n          }\r\n        </TableRow>\r\n      </TableHead>\r\n    )\r\n  }\r\n\r\n  const handleChangePage = (event: any, newPage: number) => {\r\n    setPage(newPage)\r\n  }\r\n\r\n  const handleChangeRowsPerPage = (event: any) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10))\r\n    setPage(0)\r\n  }\r\n\r\n  const TblPagination = () => (<TablePagination\r\n    component=\"div\"\r\n    page={page}\r\n    rowsPerPage={rowsPerPage}\r\n    rowsPerPageOptions={pages}\r\n    count={records.length}\r\n    onPageChange={handleChangePage}\r\n    onRowsPerPageChange={handleChangeRowsPerPage}\r\n  />)\r\n\r\n  function stableSort(array: [], comparator: (a: [], b: []) => any) {\r\n    const stabilizedThis = array.map((el: [], index: any) => [el, index])\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0])\r\n      if (order !== 0) return order\r\n      return a[1] - b[1]\r\n    })\r\n    return stabilizedThis.map((el) => el[0])\r\n  }\r\n\r\n  function getComparator(order: string, orderBy: string) {\r\n    return order === \"desc\"\r\n      ? (a: any, b: any) => descendingComparator(a, b, orderBy)\r\n      : (a: any, b: any) => -descendingComparator(a, b, orderBy)\r\n  } \r\n\r\n  function descendingComparator(a: [], b: [], orderBy: any) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1\r\n    }\r\n    return 0\r\n  }\r\n\r\n  const recordsAfterPagingAndSorting = () => {\r\n    return stableSort(filterFn.fn(records), getComparator(order, orderBy)).slice(page * rowsPerPage, (page + 1) * rowsPerPage)\r\n  }\r\n\r\n  return {\r\n    TblHead,\r\n    TblContainer,\r\n    TblPagination,\r\n    recordsAfterPagingAndSorting\r\n  }\r\n}\r\n","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\components\\Controllers\\ActionButton\\ActionButton.tsx",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\authentication\\pages\\login\\login.tsx",["285"],"import React, { useEffect } from 'react'\r\n\r\nimport { useForm, SubmitHandler } from 'react-hook-form'\r\nimport * as yup from 'yup'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport Button from '@material-ui/core/Button'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Container from '@material-ui/core/Container'\r\nimport Avatar from '@material-ui/core/Avatar'\r\n\r\nimport {makeStyles, createStyles, Theme} from '@material-ui/core'\r\nimport PersonIcon from \"@material-ui/icons/Person\"\r\nimport LockIcon from \"@material-ui/icons/Lock\"\r\n\r\nimport { checkAdminAuth } from '../../../../commons/check-authentication.common'\r\n\r\ntype FormValues = {\r\n  email: string\r\n  password: string\r\n}\r\n\r\nexport interface Props {\r\n  processLoading: boolean\r\n  submitData: (data: FormValues) => void\r\n  error: any | null\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n  createStyles({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(4)\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1)\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3),\r\n      '& .MuiInputAdornment-root': {\r\n        color: theme.palette.primary.main\r\n      }\r\n    },\r\n    error: {\r\n      padding: '10px',\r\n      color: 'red',\r\n      width: '100%',\r\n      border: '1px solid red',\r\n      borderRadius: '5px'\r\n    }\r\n  })\r\n)\r\n\r\nconst loginSchema = yup.object().shape({\r\n  email: yup.string().required().email(),\r\n  password: yup.string().required()\r\n})\r\n\r\nexport const Login = ({ submitData, processLoading, loginLoaded, error }: Props) => {\r\n  const { register, handleSubmit, formState: { errors } } = useForm<FormValues>({\r\n    resolver: yupResolver(loginSchema)\r\n  })\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    if (checkAdminAuth()) {\r\n      history.push(\"/admin/dashboard\")\r\n    }\r\n  }, [processLoading])\r\n\r\n  const onSubmit: SubmitHandler<FormValues> = (data) => {\r\n    submitData(data)\r\n  };\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n        <Paper elevation={1} className={classes.paper}>\r\n          {error && <div className={classes.error}>\r\n            <h3>Server : </h3>\r\n              <Typography variant=\"h5\">\r\n                {error.message}\r\n              </Typography>\r\n            </div>\r\n          }\r\n          <Avatar className={classes.avatar} />\r\n          <Typography component=\"h1\" variant=\"h2\">\r\n            Login\r\n          </Typography>\r\n          <form onSubmit={handleSubmit(onSubmit)} className={classes.form}> \r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  autoComplete=\"fname\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  placeholder=\"useremail@mail.com\"\r\n                  InputProps= {{\r\n                    startAdornment:(<InputAdornment position=\"start\">\r\n                      <PersonIcon />\r\n                    </InputAdornment>)\r\n                  }}\r\n                  {...(errors.email && {error: true, helperText: errors.email.message})}\r\n                  {...register('email')}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  autoComplete=\"fname\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  placeholder=\"********\"\r\n                  type=\"password\"\r\n                  InputProps= {{\r\n                    startAdornment:(<InputAdornment position=\"start\">\r\n                      <LockIcon />\r\n                    </InputAdornment>)\r\n                  }}\r\n                  {...(errors.password && {error: true, helperText: errors.password.message})}\r\n                  {...register('password')}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                  label=\"Remember me\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={8}></Grid>\r\n              <Grid item xs={4}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                >\r\n                  Login\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Paper>\r\n    </Container>\r\n  )\r\n}\r\n\r\n","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\components\\Controllers\\Checkbox\\Checkbox.tsx",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\components\\Controllers\\InputText\\Input.tsx",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\authentication\\pages\\register\\register.tsx",["286"],"import React, { useEffect } from 'react'\r\nimport { useForm, SubmitHandler } from 'react-hook-form'\r\nimport * as yup from 'yup'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport {Link as RouterLink} from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Link from '@material-ui/core/Link'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\n\r\nimport { checkAdminAuth } from '../../../../commons/check-authentication.common'\r\n\r\ntype FormValues = {\r\n  firstName: string\r\n  lastName: string \r\n  email: string\r\n  password: string\r\n}\r\n\r\nconst registerSchema = yup.object().shape({\r\n  firstName: yup.string().required(),\r\n  lastName: yup.string().required(),\r\n  email: yup.string().required().email(),\r\n  password: yup.string().required(),\r\n})\r\n\r\nexport interface Props {\r\n  processLoading: boolean\r\n  submitData: (data: FormValues) => void\r\n  error: any | null\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(4)\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2)\r\n    },\r\n    error: {\r\n      padding: '10px',\r\n      color: 'red',\r\n      width: '100%',\r\n      border: '1px solid red',\r\n      borderRadius: '5px'\r\n    }\r\n  })\r\n)\r\n\r\nexport function Register({ submitData, processLoading, error}: Props) {\r\n  const {register, handleSubmit, formState: { errors }} = useForm<FormValues>({\r\n    resolver: yupResolver(registerSchema)\r\n  })\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    if (checkAdminAuth()) {\r\n      history.push(\"/admin/dashboard\")\r\n    }\r\n  }, [processLoading])\r\n\r\n  const onSubmit: SubmitHandler<FormValues> = data => submitData(data);\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <Paper elevation={1} className={classes.paper}>\r\n        {error && <div className={classes.error}>\r\n            <h3>Server : </h3>\r\n              <Typography variant=\"h5\">\r\n                {error.error_msg}\r\n              </Typography>\r\n            </div>\r\n        }\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h2\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"First Name *\"\r\n                {...(errors.firstName && {error: true, helperText: errors.firstName.message})}\r\n                {...register('firstName')}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Last Name *\"\r\n                {...(errors.lastName && {error: true, helperText: errors.lastName.message})}\r\n                {...register('lastName')}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Email Address *\"\r\n                fullWidth\r\n                {...(errors.email && {error: true, helperText: errors.email.message})}\r\n                {...register('email')}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Password *\"\r\n                type=\"password\"\r\n                fullWidth\r\n                {...(errors.password && {error: true, helperText: errors.password.message})}\r\n                {...register('password')}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7}></Grid>\r\n            <Grid item xs={5}>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <RouterLink to=\"/authentication/login\">\r\n                <Link variant=\"body2\">\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </RouterLink>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  )\r\n}\r\n","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\components\\Controllers\\InputFile\\index.tsx",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\components\\Controllers\\Select\\index.tsx",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\category\\pages\\index.ts",[],"C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\category\\pages\\categories.tsx",["287"],"import React, { useState, useEffect } from 'react'\r\n\r\nimport { useTable } from '../../../components/CustomHook'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\n\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nimport Popup from '../../../components/Popup/Popup'\r\nimport { Controllers } from '../../../components/Controllers'\r\n\r\nimport CategoiresForm, { FormValues } from './categoriesForm'\r\n\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\r\n\r\nexport interface Props {\r\n  categoriesLoaded: boolean \r\n  getCategories: () => void\r\n  categories: any\r\n  submitData: (data: FormValues) => void\r\n  deleteCategory: (data: any) => void\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    pageContent: {\r\n      padding: theme.spacing(4),\r\n      '& .MuiToolbar-root': {\r\n        padding: 0\r\n      }\r\n    },\r\n    searchInput: {\r\n      width: '75%'\r\n    },\r\n    newButton: {\r\n      position: \"absolute\",\r\n      right: \"10px\"\r\n    },\r\n  })\r\n)\r\n\r\nconst headCells = [\r\n  { id: 'id', label: 'No.' },\r\n  { id: 'name', label: 'Categoy Name' },\r\n  { id: 'articles', label: 'Articles' },\r\n  { id: \"actions\", label: \"Actions\", disableSorting: true }\r\n]\r\n\r\ninterface ICategory {\r\n  id: string\r\n  name: string\r\n  articles: string[]\r\n}\r\n\r\nexport const Categories = ({ categoriesLoaded, getCategories, categories, submitData, deleteCategory }: Props) => {\r\n  const classes = useStyles()\r\n\r\n  const [openPopup, setOpenPopup] = useState<boolean>(false)\r\n  const [filterFn, setFilterFn] = useState({fn: items => {return items; }})\r\n\r\n  const handleSearch = (e: React.ChangeEvent) => {\r\n    let target = e.target\r\n    setFilterFn({\r\n      fn: items => {\r\n        if (target.value === '')\r\n          return items\r\n        else \r\n          return items.filter(x => x.name.toLowerCase().includes(target.value))\r\n      }\r\n    })\r\n  }\r\n\r\n  const {\r\n    TblContainer,\r\n    TblHead,\r\n    TblPagination,\r\n    recordsAfterPagingAndSorting\r\n  } = useTable(categories, headCells, filterFn)\r\n\r\n  useEffect(() => {\r\n    getCategories()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.pageContent}>\r\n        <Toolbar>\r\n          <TextField\r\n            className={classes.searchInput}\r\n            label=\"Search Category\"\r\n            InputProps= {{\r\n                startAdornment:(<InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>)\r\n              }}\r\n            variant=\"outlined\"\r\n            onChange={handleSearch}\r\n          />\r\n          <Button\r\n            className={classes.newButton}\r\n            variant=\"outlined\"\r\n            startIcon={<AddIcon />}\r\n            onClick={() => setOpenPopup(true)}\r\n          >Add New</Button>\r\n        </Toolbar>\r\n        <TblContainer>\r\n          <TblHead />\r\n          <TableBody>\r\n            {\r\n              categories && recordsAfterPagingAndSorting().map((item: ICategory) => (\r\n                <TableRow key={item._id}>\r\n                  <TableCell>{item._id}</TableCell>\r\n                  <TableCell>{item.name}</TableCell>\r\n                  <TableCell>{item.articles.length} Articles</TableCell>\r\n                  <TableCell>\r\n                    <Controllers.ActionButton\r\n                      color=\"secondary\"\r\n                      onClick={() => deleteCategory(item._id)}\r\n                    >\r\n                      <CloseIcon fontSize=\"small\" />\r\n                    </Controllers.ActionButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            }\r\n          </TableBody>\r\n        </TblContainer>\r\n        {categories && <TblPagination />}\r\n      </Paper>\r\n      <Popup\r\n        title=\"Categories Form\"\r\n        openPopup={openPopup}\r\n        setOpenPopup={setOpenPopup}\r\n      >\r\n        <CategoiresForm\r\n          sendData={submitData}\r\n          setOpenPopup={setOpenPopup}\r\n        />\r\n      </Popup>\r\n    </>\r\n  ) \r\n}\r\n","C:\\Users\\Givaro\\Desktop\\dashboard-admin\\src\\feature\\category\\pages\\categoriesForm.tsx",["288","289"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport { useForm, SubmitHandler } from 'react-hook-form'\r\nimport * as yup from 'yup'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core'\r\n\r\nimport { Form } from '../../../components/CustomHook/useForm'\r\nimport { Controllers } from '../../../components/Controllers'\r\n\r\nexport type FormValues = {\r\n  name: string\r\n}\r\n\r\nconst Schema = yup.object().shape({\r\n  name: yup.string().required()\r\n})\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n  createStyles({\r\n    button: {\r\n      marginTop: theme.spacing(4)\r\n    }\r\n  })\r\n)\r\n\r\ninterface Props {\r\n  sendData: (data: FormValues) => void\r\n  setOpenPopup: boolean\r\n}\r\n\r\nexport default function CategoriesForm({ sendData, setOpenPopup }: Props ) {\r\n  const classes = useStyles()\r\n\r\n  const { register, handleSubmit, formState: { errors }, setValue} = useForm<FormValues>({\r\n    resolver: yupResolver(Schema)\r\n  })\r\n\r\n  const onSubmit: SubmitHandler<FormValues> = data => {\r\n    sendData(data)\r\n    setOpenPopup(false)\r\n  };\r\n\r\n  useEffect(() => {\r\n    register('name')\r\n  }, [])\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit(onSubmit)}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Controllers.Input\r\n            label=\"Name\"\r\n            fullWidth\r\n            error={errors.name}\r\n            onChange={(event: React.ChangeEvent<{ value: unknown }>) => setValue('name', event.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            className={classes.button}\r\n          >\r\n            Post\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Form>\r\n  )\r\n}\r\n",["290","291"],{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","severity":1,"message":"297","line":31,"column":19,"nodeType":"298","messageId":"299","endLine":31,"endColumn":21},{"ruleId":"300","severity":1,"message":"301","line":2,"column":25,"nodeType":"302","messageId":"303","endLine":2,"endColumn":33},{"ruleId":"300","severity":1,"message":"304","line":18,"column":10,"nodeType":"302","messageId":"303","endLine":18,"endColumn":24},{"ruleId":"300","severity":1,"message":"305","line":42,"column":20,"nodeType":"302","messageId":"303","endLine":42,"endColumn":31},{"ruleId":"306","severity":1,"message":"307","line":62,"column":6,"nodeType":"308","endLine":62,"endColumn":8,"suggestions":"309"},{"ruleId":"306","severity":1,"message":"310","line":74,"column":6,"nodeType":"308","endLine":74,"endColumn":8,"suggestions":"311"},{"ruleId":"300","severity":1,"message":"312","line":9,"column":8,"nodeType":"302","messageId":"303","endLine":9,"endColumn":12},{"ruleId":"300","severity":1,"message":"313","line":11,"column":8,"nodeType":"302","messageId":"303","endLine":11,"endColumn":13},{"ruleId":"300","severity":1,"message":"314","line":12,"column":8,"nodeType":"302","messageId":"303","endLine":12,"endColumn":19},{"ruleId":"300","severity":1,"message":"315","line":13,"column":8,"nodeType":"302","messageId":"303","endLine":13,"endColumn":18},{"ruleId":"300","severity":1,"message":"316","line":14,"column":8,"nodeType":"302","messageId":"303","endLine":14,"endColumn":14},{"ruleId":"300","severity":1,"message":"317","line":15,"column":8,"nodeType":"302","messageId":"303","endLine":15,"endColumn":16},{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","replacedBy":"295"},{"ruleId":"318","severity":1,"message":"319","line":60,"column":21,"nodeType":"298","messageId":"320","endLine":60,"endColumn":38},{"ruleId":"306","severity":1,"message":"321","line":81,"column":6,"nodeType":"308","endLine":81,"endColumn":22,"suggestions":"322"},{"ruleId":"306","severity":1,"message":"321","line":83,"column":6,"nodeType":"308","endLine":83,"endColumn":22,"suggestions":"323"},{"ruleId":"306","severity":1,"message":"324","line":92,"column":6,"nodeType":"308","endLine":92,"endColumn":8,"suggestions":"325"},{"ruleId":"300","severity":1,"message":"326","line":1,"column":28,"nodeType":"302","messageId":"303","endLine":1,"endColumn":36},{"ruleId":"306","severity":1,"message":"327","line":50,"column":6,"nodeType":"308","endLine":50,"endColumn":8,"suggestions":"328"},{"ruleId":"292","replacedBy":"329"},{"ruleId":"294","replacedBy":"330"},"no-native-reassign",["331"],"no-negated-in-lhs",["332"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'checkAdminAuth' is defined but never used.","'setFilterFn' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getArticle', 'getCategories', and 'getUsersData'. Either include them or remove the dependency array. If 'getArticle' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["333"],"React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array. If 'getUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["334"],"'Chip' is defined but never used.","'Input' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","no-self-compare","Comparing to itself is potentially pointless.","comparingToSelf","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["335"],["336"],"React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array. If 'getCategories' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["337"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.",["338"],["331"],["332"],"no-global-assign","no-unsafe-negation",{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"343","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},"Update the dependencies array to be: [getArticle, getCategories, getUsersData]",{"range":"350","text":"351"},"Update the dependencies array to be: [getUsers]",{"range":"352","text":"353"},"Update the dependencies array to be: [history, processLoading]",{"range":"354","text":"355"},{"range":"356","text":"355"},"Update the dependencies array to be: [getCategories]",{"range":"357","text":"358"},"Update the dependencies array to be: [register]",{"range":"359","text":"360"},[1784,1786],"[getArticle, getCategories, getUsersData]",[2060,2062],"[getUsers]",[2359,2375],"[history, processLoading]",[2441,2457],[2517,2519],"[getCategories]",[1241,1243],"[register]"]